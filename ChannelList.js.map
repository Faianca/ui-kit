{"version":3,"file":"ChannelList.js","sources":["../src/smart-components/ChannelList/dux/actionTypes.js","../src/smart-components/ChannelList/dux/initialState.js","../src/smart-components/ChannelList/dux/reducers.js","../src/ui/ChannelPreview/index.tsx","../src/ui/ChannelHeader/index.jsx","../src/ui/EditUserProfile/index.tsx","../src/smart-components/ChannelList/components/AddChannel.jsx","../src/smart-components/ChannelList/components/ChannelPreviewAction.jsx","../src/smart-components/ChannelList/components/Placeholder.jsx","../src/smart-components/ChannelList/utils.js","../src/smart-components/ChannelList/index.jsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n};\n","import * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: action.payload,\n        currentChannel: (action.payload && action.payload.length && action.payload.length > 0)\n          ? action.payload[0].url\n          : null,\n      };\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter(\n            (channel) => channel.url !== action.payload.url,\n          )],\n        currentChannel: action.payload.url,\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED:\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      const leftCurrentChannel = (state.currentChannel === channelUrl);\n      const newAllChannels = state.allChannels.filter(({ url }) => url !== channelUrl);\n      const currentChannel = leftCurrentChannel\n        ? (() => (\n          (newAllChannels.length > 0)\n            ? newAllChannels[0].url\n            : ''\n        ))()\n        : state.currentChannel;\n\n      return {\n        ...state,\n        currentChannel,\n        allChannels: newAllChannels,\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      const { url } = channel;\n      if (isMe) {\n        const leftCurrentChannel = (url === state.currentChannel);\n        const newAllChannels = state.allChannels.filter((c) => (c.url !== url));\n        const currentChannel = leftCurrentChannel\n          ? (() => (\n            (newAllChannels.length > 0)\n              ? newAllChannels[0].url\n              : ''\n          ))()\n          : state.currentChannel;\n\n        return {\n          ...state,\n          currentChannel,\n          allChannels: newAllChannels,\n        };\n      }\n      // other user left\n      const newAllChannels = state.allChannels.map((c) => ((c.url === url) ? channel : c));\n      return {\n        ...state,\n        allChannels: newAllChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const { unreadMessageCount } = action.payload;\n      const channel = action.payload;\n      if (!channel.lastMessage) {\n        return state;\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel.url);\n        const currentUnReadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnReadCount === 0) {\n          return {\n            ...state,\n            allChannels: allChannels.map((c) => {\n              if (c.url === channel.url) {\n                return channel;\n              }\n              return c;\n            }),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            return action.payload;\n          }\n          return channel;\n        }),\n      };\n    case actions.ON_CHANNEL_FROZEN:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            // eslint-disable-next-line no-param-reassign\n            channel.isFrozen = true;\n            return channel;\n          }\n          return channel;\n        }),\n      };\n    case actions.ON_CHANNEL_UNFROZEN:\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => {\n          if (channel.url === action.payload.url) {\n            // eslint-disable-next-line no-param-reassign\n            channel.isFrozen = false;\n            return channel;\n          }\n          return channel;\n        }),\n      };\n    case actions.CHANNEL_REPLACED_TO_TOP:\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel.url !== action.payload.url),\n        ],\n      };\n    default:\n      return state;\n  }\n}\n","import React, { ReactElement } from 'react';\nimport './index.scss';\n\ninterface Props {\n}\n\nexport default function ChannelPreview({}: Props): ReactElement {\n  return (\n    <div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport IconButton from '../IconButton';\n\nimport './index.scss';\nimport Avatar from '../Avatar/index';\n\nexport default function ChannelHeader({\n  user,\n  renderHeader,\n  iconButton,\n  onEdit,\n  allowProfileEdit,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        'sendbird-channel-header',\n        allowProfileEdit ? 'sendbird-channel-header--allow-edit' : '',\n      ].join(' ')}\n    >\n      {\n        renderHeader\n          ? renderHeader()\n          : (\n            <div\n              className=\"sendbird-channel-header__title\"\n              role=\"button\"\n              onClick={onEdit}\n              onKeyDown={onEdit}\n              tabIndex=\"0\"\n            >\n              <div className=\"sendbird-channel-header__title__left\">\n                <Avatar\n                  width=\"32px\"\n                  height=\"32px\"\n                  src={user.profileUrl}\n                  alt={user.nickname}\n                />\n              </div>\n              <div className=\"sendbird-channel-header__title__right\">\n                <Label\n                  className=\"sendbird-channel-header__title__right__name\"\n                  type={LabelTypography.SUBTITLE_2}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {user.nickname || stringSet.NO_NAME}\n                </Label>\n                <Label\n                  className=\"sendbird-channel-header__title__right__user-id\"\n                  type={LabelTypography.BODY_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {user.userId}\n                </Label>\n              </div>\n            </div>\n          )\n      }\n      <div className=\"sendbird-channel-header__right-icon\">\n        {iconButton}\n      </div>\n    </div>\n  );\n}\n\nChannelHeader.propTypes = {\n  user: PropTypes.shape({\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n    userId: PropTypes.string,\n  }),\n  renderHeader: PropTypes.func,\n  iconButton: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.instanceOf(IconButton),\n  ]),\n  onEdit: PropTypes.func.isRequired,\n  allowProfileEdit: PropTypes.bool,\n};\n\nChannelHeader.defaultProps = {\n  user: {},\n  renderHeader: null,\n  iconButton: null,\n  allowProfileEdit: false,\n};\n","import React, {\n  ReactElement,\n  useRef,\n  useState,\n  useContext,\n} from 'react';\nimport './index.scss';\n\nimport Modal from '../Modal';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport Input, { InputLabel } from '../Input';\nimport Avatar from '../Avatar';\nimport Icon, { IconTypes } from '../Icon';\nimport { Type as ButtonType } from '../Button/type';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport TextButton from '../TextButton';\nimport { SendbirdTypes } from '../../types';\nimport { noop } from '../../utils/utils';\n\ninterface Props {\n  user: SendbirdTypes['User'];\n  theme?: string;\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  changeTheme?(theme: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nexport function EditUserProfile({\n  user,\n  theme = 'light',\n  onCancel,\n  onSubmit,\n  changeTheme = noop,\n  onThemeChange = null,\n}: Props): ReactElement {\n  const hiddenInputRef = useRef(null);\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n\n  return (\n    <Modal\n      titleText={stringSet.EDIT_PROFILE__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      type={ButtonType.PRIMARY}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (user.nickname !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(inputRef.current.value, newFile);\n        onCancel();\n      }}\n    >\n      <form\n        className=\"sendbird-edit-user-profile\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <section className=\"sendbird-edit-user-profile__img\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__IMAGE_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__img__avatar\">\n            <Avatar\n              height=\"80px\"\n              width=\"80px\"\n              src={currentImg || user.profileUrl}\n            />\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"sendbird-edit-user-profile__img__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.EDIT_PROFILE__IMAGE_UPLOAD}\n            </Label>\n          </TextButton>\n        </section>\n        <section className=\"sendbird-edit-user-profile__name\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__NICKNAME_LABEL}\n          </InputLabel>\n          <Input\n            required={user.nickname !== ''}\n            name=\"sendbird-edit-user-profile__name__input\"\n            ref={inputRef}\n            value={user.nickname}\n            placeHolder={stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__userid\">\n          <InputLabel>\n            {/*  userID */}\n            {stringSet.EDIT_PROFILE__USERID_LABEL}\n          </InputLabel>\n          <Input\n            disabled\n            name=\"sendbird-edit-user-profile__userid__input\"\n            value={user.userId}\n          />\n        </section>\n        <section className=\"sendbird-edit-user-profile__theme\">\n          <InputLabel>\n            {stringSet.EDIT_PROFILE__THEME_LABEL}\n          </InputLabel>\n          <div className=\"sendbird-edit-user-profile__theme__theme-icon\">\n            {\n              theme === 'dark'\n                ? (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('light');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('light');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_ON}\n                    width={44}\n                    height={24}\n                  />\n                )\n                : (\n                  <Icon\n                    onClick={() => {\n                      changeTheme('dark');\n                      if (onThemeChange && typeof onThemeChange === 'function') {\n                        onThemeChange('dark');\n                      }\n                    }}\n                    type={IconTypes.TOGGLE_OFF}\n                    width={44}\n                    height={24}\n                  />\n                )\n            }\n          </div>\n        </section>\n      </form>\n    </Modal>\n  );\n}\n\nconst mapStoreToProps = (store) => {\n  return {\n    theme: store.config.theme,\n    changeTheme: store.config.setCurrenttheme,\n  };\n};\n\ninterface ConnectedEditUserProfileProps {\n  user: SendbirdTypes['User'];\n  onCancel(): void;\n  onSubmit(newFile: File, newNickname: string): void;\n  onThemeChange?(theme: string): void;\n}\n\nconst ConnectedEditUserProfile: (\n  props: ConnectedEditUserProfileProps\n) => React.Component = withSendbirdContext(EditUserProfile, mapStoreToProps);\n\nexport default ConnectedEditUserProfile;\n","import './add-channel.scss';\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport IconButton from '../../../ui/IconButton';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport InviteMembers from '../../InviteMembers';\n\nimport {\n  createChannel,\n  createDefaultUserListQuery,\n  isBroadcastChannelEnabled,\n  isSuperGroupChannelEnabled,\n} from './utils';\nimport { CREATE_CHANNEL } from '../dux/actionTypes';\nimport Modal from '../../../ui/Modal';\n\nexport default function AddChannel({\n  sdk,\n  disabled,\n  channelListDispatcher,\n  onBeforeCreateChannel,\n  userId,\n  userFilledApplicationUserListQuery,\n  userListQuery,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState('group');\n  const { stringSet } = useContext(LocalizationContext);\n\n  if (!sdk || !sdk.createApplicationUserListQuery) {\n    return null;\n  }\n\n  const isBroadcastAvailable = isBroadcastChannelEnabled(sdk);\n  const isSupergroupAvailable = isSuperGroupChannelEnabled(sdk);\n\n  return (\n    <>\n      <IconButton\n        height=\"32px\"\n        width=\"32px\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n        disabled={disabled}\n      >\n        <Icon\n          type={IconTypes.CREATE}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </IconButton>\n      {\n        showModal && step === 0 && (\n          <Modal\n            titleText=\"New channel\"\n            hideFooter\n            onCancel={() => { setShowModal(false); }}\n            onSubmit={() => {}}\n          >\n            <div className=\"sendbird-add-channel__rectangle-wrap\">\n              <div\n                className=\"sendbird-add-channel__rectangle\"\n                onClick={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={() => {\n                  setType('group');\n                  setStep(1);\n                }}\n              >\n                <Icon\n                  className=\"sendbird-add-channel__rectangle__chat-icon\"\n                  type={IconTypes.CHAT}\n                  fillColor={IconColors.PRIMARY}\n                  width=\"28px\"\n                  height=\"28px\"\n                />\n                <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                  Group\n                </Label>\n              </div>\n              {\n                isSupergroupAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('supergroup');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__supergroup-icon\"\n                      type={IconTypes.SUPERGROUP}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      Super group\n                    </Label>\n                  </div>\n                )\n              }\n              {\n                isBroadcastAvailable && (\n                  <div\n                    className=\"sendbird-add-channel__rectangle\"\n                    onClick={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {\n                      setType('broadcast');\n                      setStep(1);\n                    }}\n                  >\n                    <Icon\n                      className=\"sendbird-add-channel__rectangle__broadcast-icon\"\n                      type={IconTypes.BROADCAST}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"28px\"\n                      height=\"28px\"\n                    />\n                    <Label type={LabelTypography.SUBTITLE_1} color={LabelColors.ONBACKGROUND_1}>\n                      Broadcast\n                    </Label>\n                  </div>\n                )\n              }\n            </div>\n          </Modal>\n        )\n      }\n      {\n        showModal && step === 1 && (\n          <InviteMembers\n            swapParams={\n              sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n            }\n            titleText={stringSet.MODAL__CREATE_CHANNEL__TITLE}\n            submitText={stringSet.BUTTON__CREATE}\n            closeModal={() => {\n              setStep(0);\n              setShowModal(false);\n            }}\n            idsToFilter={[userId]}\n            userQueryCreator={() => ((userListQuery && typeof userListQuery === 'function')\n              ? userListQuery()\n              : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n            )}\n            onSubmit={(selectedUsers) => createChannel(\n              sdk,\n              selectedUsers,\n              onBeforeCreateChannel,\n              userId,\n              type,\n            ).then((channel) => {\n              // maybe - do this in event listener\n              channelListDispatcher({\n                type: CREATE_CHANNEL,\n                payload: channel,\n              });\n            })}\n          />\n        )\n      }\n    </>\n  );\n}\n\nAddChannel.propTypes = {\n  sdk: PropTypes.shape({\n    getErrorFirstCallback: PropTypes.func,\n    createApplicationUserListQuery: PropTypes.func,\n  }).isRequired,\n  disabled: PropTypes.bool,\n  channelListDispatcher: PropTypes.func.isRequired,\n  userFilledApplicationUserListQuery: PropTypes.shape({}),\n  onBeforeCreateChannel: PropTypes.func,\n  userId: PropTypes.string.isRequired,\n  userListQuery: PropTypes.func,\n};\n\nAddChannel.defaultProps = {\n  disabled: false,\n  userFilledApplicationUserListQuery: {},\n  onBeforeCreateChannel: null,\n  userListQuery: null,\n};\n","import React, {\n  useState,\n  useRef,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../ui/ContextMenu';\nimport IconButton from '../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport LeaveChannelModal from '../../ChannelSettings/components/LeaveChannel';\n\nexport default function ChannelPreviewAction({ disabled, onLeaveChannel }) {\n  const parentRef = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div\n      role=\"button\"\n      style={{ display: 'inline-block' }}\n      onKeyDown={(e) => { e.stopPropagation(); }}\n      tabIndex={0}\n      onClick={(e) => { e.stopPropagation(); }}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <IconButton\n            ref={parentRef}\n            onClick={toggleDropdown}\n            height=\"32px\"\n            width=\"32px\"\n          >\n            <Icon\n              type={IconTypes.MORE}\n              fillColor={IconColors.PRIMARY}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            parentRef={parentRef}\n            parentContainRef={parentRef}\n            closeDropdown={closeDropdown}\n          >\n            <MenuItem\n              onClick={() => {\n                if (disabled) { return; }\n                setShowModal(true);\n                closeDropdown();\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n            </MenuItem>\n          </MenuItems>\n        )}\n      />\n      {\n        showModal && (\n          <LeaveChannelModal\n            onCloseModal={() => setShowModal(false)}\n            onLeaveChannel={onLeaveChannel}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nChannelPreviewAction.propTypes = {\n  disabled: PropTypes.bool,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nChannelPreviewAction.defaultProps = {\n  disabled: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Placeholder from '../../../ui/PlaceHolder';\n\nexport default function ChannelsPlaceholder({\n  type,\n}) {\n  return (\n    <div className=\"sendbird-channel-list\">\n      <Placeholder type={type} />\n    </div>\n  );\n}\n\nChannelsPlaceholder.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new sdk.ChannelHandler();\n\n  ChannelHandler.onChannelChanged = (channel) => {\n    logger.info('ChannelList: onChannelChanged', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_CHANGED,\n      payload: channel,\n    });\n  };\n  ChannelHandler.onChannelDeleted = (channelUrl) => {\n    logger.info('ChannelList: onChannelDeleted', channelUrl);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_DELETED,\n      payload: channelUrl,\n    });\n  };\n  ChannelHandler.onUserJoined = (channel) => {\n    logger.info('ChannelList: onUserJoined', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_JOINED,\n        payload: channel,\n      });\n    }\n  };\n  ChannelHandler.onUserBanned = (channel, user) => {\n    const { currentUser } = sdk;\n    logger.info('Channel | useHandleChannelEvents: onUserBanned', channel);\n    if (user.userId === currentUser.userId) {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: true,\n        },\n      });\n    } else {\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe: false,\n        },\n      });\n    }\n  };\n  ChannelHandler.onUserLeft = (channel, leftUser) => {\n    const { currentUser } = sdk;\n    const isMe = (currentUser.userId === leftUser.userId);\n    logger.info('ChannelList: onUserLeft', channel);\n    channelListDispatcher({\n      type: channelActions.ON_USER_LEFT,\n      payload: {\n        channel,\n        isMe,\n      },\n    });\n  };\n\n  ChannelHandler.onReadStatus = (channel) => {\n    logger.info('ChannelList: onReadStatus', channel);\n    channelListDispatcher({\n      type: channelActions.ON_READ_RECEIPT_UPDATED,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n    logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n    if (channel.lastMessage) {\n      channelListDispatcher({\n        type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onMessageUpdated = (channel, message) => {\n    if (channel.lastMessage.isEqual(message)) {\n      logger.info('ChannelList: onMessageUpdated', channel);\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: channel,\n      });\n    }\n  };\n\n  ChannelHandler.onChannelHidden = (channel) => {\n    logger.info('ChannelList: onChannelHidden', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_ARCHIVED,\n      payload: channel.url,\n    });\n  };\n\n  ChannelHandler.onChannelFrozen = (channel) => {\n    logger.info('ChannelList: onChannelFrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_FROZEN,\n      payload: channel,\n    });\n  };\n\n  ChannelHandler.onChannelUnfrozen = (channel) => {\n    logger.info('ChannelList: onChannelUnfrozen', channel);\n    channelListDispatcher({\n      type: channelActions.ON_CHANNEL_UNFROZEN,\n      payload: channel,\n    });\n  };\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.addChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createChannelListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const channelListQuery = sdk.GroupChannel.createMyGroupChannelListQuery();\n  channelListQuery.includeEmpty = false;\n  channelListQuery.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n  channelListQuery.limit = 20; // The value of pagination limit could be set up to 100.\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      channelListQuery[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n}) {\n  createEventHandler({\n    sdk,\n    channelListDispatcher,\n    sdkChannelHandlerId,\n    logger,\n  });\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next((response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let channelList = response;\n      let err = error;\n      if (swapParams) {\n        channelList = error;\n        err = response;\n      }\n      logger.info('ChannelList - fetched channels', channelList);\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n        return;\n      }\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sorted = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sorted = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sorted);\n      }\n      onChannelSelect(sorted[0]);\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: sorted,\n      });\n      if (channelList && typeof channelList.forEach === 'function') {\n        logger.info('ChannelList - mark all channels as delivered');\n        channelList.forEach((c) => c.markAsDelivered());\n      }\n    });\n  } else {\n    logger.warning('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subScriber = new Map();\n  if (!pubSub) return subScriber;\n  subScriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subScriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    updatedChannel.lastMessage = message;\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subScriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel.url,\n    });\n  }));\n\n  subScriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subScriber;\n};\n\nexport default setupChannelList;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as userActions from '../../lib/dux/user/actionTypes';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\n\nimport * as channelListActions from './dux/actionTypes';\nimport channelListInitialState from './dux/initialState';\nimport channelListReducers from './dux/reducers';\n\nimport ChannelPreview from '../../ui/ChannelPreview';\nimport ChannelHeader from '../../ui/ChannelHeader';\nimport EditUserProfile from '../../ui/EditUserProfile';\nimport PlaceholderTypes from '../../ui/PlaceHolder/type';\n\nimport AddChannel from './components/AddChannel';\nimport ChannelPreviewAction from './components/ChannelPreviewAction';\nimport PlaceHolder from './components/Placeholder';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from './utils';\nimport { uuidv4 } from '../../utils/uuid';\n\nimport './index.scss';\n\nconst noop = () => { };\n\nfunction ChannelList(props) {\n  const {\n    stores: { sdkStore = {}, userStore = {} },\n    config: {\n      userId,\n      isOnline,\n      userListQuery,\n      logger,\n      pubSub,\n      theme,\n    },\n    dispatchers: {\n      userDispatcher,\n    },\n    queries = {},\n    renderChannelPreview,\n    renderHeader,\n    renderUserProfile,\n    disableUserProfile,\n    allowProfileEdit,\n    sortChannelList,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    onChannelSelect,\n  } = props;\n  const { config = {} } = props;\n  // enable if it is true atleast once(both are flase by default)\n  const enableEditProfile = allowProfileEdit || config.allowProfileEdit;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const { sdk = {} } = sdkStore;\n  const userFilledChannelListQuery = queries.channelListQuery;\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  const sdkError = sdkStore.error;\n  const sdkIntialized = sdkStore.initialized;\n\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  );\n  const [user, setUser] = useState({});\n  const [channelSource, setChannelSource] = useState({});\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n  const [sdkChannelHandlerId, setSdkChannelHandlerId] = useState(null);\n\n  const { loading, currentChannel } = channelListStore;\n\n  useEffect(() => {\n    setUser(userStore.user);\n  }, [userStore.user]);\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    setSdkChannelHandlerId(uuidv4);\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource({});\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk && sdk.removeChannelHandler) {\n        sdk.removeChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  useEffect(() => {\n    if (!sdk || !sdk.GroupChannel) { return; }\n    sdk.GroupChannel.getChannel(currentChannel, (groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel]);\n\n  return (\n    <UserProfileProvider\n      className=\"sendbird-channel-list\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-list__header\">\n        <ChannelHeader\n          renderHeader={renderHeader}\n          user={user}\n          onEdit={() => {\n            if (enableEditProfile) {\n              setShowProfileEdit(true);\n            }\n          }}\n          allowProfileEdit={enableEditProfile}\n          iconButton={(\n            <AddChannel\n              disabled={!isOnline}\n              userListQuery={userListQuery}\n              sdk={sdk}\n              channelListDispatcher={channelListDispatcher}\n              userId={userId}\n              userFilledApplicationUserListQuery={userFilledApplicationUserListQuery}\n              onBeforeCreateChannel={onBeforeCreateChannel}\n            />\n          )}\n        />\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            user={user}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onSubmit={(newName, newFile) => {\n              sdk.updateCurrentUserInfoWithProfileImage(newName, newFile, (updatedUser) => {\n                userDispatcher({ type: userActions.UPDATE_USER_INFO, payload: updatedUser });\n                if (onProfileEditSuccess && typeof onProfileEditSuccess === 'function') {\n                  onProfileEditSuccess(updatedUser);\n                }\n              });\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const fetchMore = e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight;\n          if (fetchMore && channelSource.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n            });\n            channelSource.next((response, error) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let channelList = response;\n              let err = error;\n              if (swapParams) {\n                channelList = error;\n                err = response;\n              }\n              if (err) {\n                logger.info('ChannelList: Fetching channels failed', err);\n                channelListDispatcher({\n                  type: channelListActions.FETCH_CHANNELS_FAILURE,\n                  payload: channelList,\n                });\n                return;\n              }\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n              if (channelList && typeof channelList.forEach === 'function') {\n                logger.info('ChannelList: Marking all channels as read');\n                channelList.forEach((c) => c.markAsDelivered());\n              }\n            });\n          }\n        }}\n      >\n        {\n          (sdkError) && (\n            <PlaceHolder type={PlaceholderTypes.WRONG} />\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            sortedChannels && sortedChannels.map((channel, idx) => {\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel.url,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      currentUser={user}\n                      theme={theme}\n                      isActive={channel.url === currentChannel}\n                      // todo - potential performance hit refactor\n                      ChannelAction={(\n                        <ChannelPreviewAction\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel)}\n                        />\n                      )}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!sdkIntialized || loading) && (\n            <PlaceHolder type={PlaceholderTypes.LOADING} />\n          )\n        }\n        {\n          //  placeholder\n          (!allChannels || allChannels.length === 0) && (\n            <PlaceHolder type={PlaceholderTypes.NO_CHANNELS} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelList.propTypes = {\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    userDispatcher: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string.isRequired,\n    userListQuery: PropTypes.func,\n    theme: PropTypes.string,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    channelListQuery: PropTypes.shape({\n      channelNameContainsFilter: PropTypes.string,\n      channelUrlsFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypesFilter: PropTypes.arrayOf(PropTypes.string),\n      customTypeStartsWithFilter: PropTypes.string,\n      hiddenChannelFilter: PropTypes.string,\n      includeEmpty: PropTypes.bool,\n      limit: PropTypes.number,\n      memberStateFilter: PropTypes.string,\n      metadataOrderKeyFilter: PropTypes.string,\n      nicknameContainsFilter: PropTypes.string,\n      order: PropTypes.string,\n      publicChannelFilter: PropTypes.string,\n      superChannelFilter: PropTypes.string,\n      unreadChannelFilter: PropTypes.string,\n      userIdsExactFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilter: PropTypes.arrayOf(PropTypes.string),\n      userIdsIncludeFilterQueryType: PropTypes.string,\n    }),\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  onBeforeCreateChannel: PropTypes.func,\n  renderChannelPreview: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  sortChannelList: PropTypes.func,\n  onThemeChange: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  renderHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  onChannelSelect: PropTypes.func,\n};\n\nChannelList.defaultProps = {\n  onBeforeCreateChannel: null,\n  renderChannelPreview: null,\n  renderHeader: null,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  allowProfileEdit: false,\n  onThemeChange: null,\n  sortChannelList: null,\n  onProfileEditSuccess: null,\n  queries: {},\n  onChannelSelect: noop,\n};\n\nexport default withSendbirdContext(ChannelList);\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","initialized","loading","allChannels","currentChannel","showSettings","reducer","state","action","type","actions","initialState","payload","length","url","currentChannels","map","c","filteredChannels","filter","find","channel","channelUrl","leftCurrentChannel","newAllChannels","isMe","unreadMessageCount","lastMessage","currentUnReadCount","isFrozen","ChannelPreview","_a","ChannelHeader","user","renderHeader","iconButton","onEdit","allowProfileEdit","useContext","LocalizationContext","stringSet","join","profileUrl","nickname","LabelTypography","SUBTITLE_2","LabelColors","ONBACKGROUND_1","NO_NAME","BODY_2","ONBACKGROUND_2","userId","propTypes","PropTypes","shape","string","func","oneOfType","element","instanceOf","IconButton","isRequired","bool","defaultProps","EditUserProfile","_b","theme","onCancel","onSubmit","_c","changeTheme","noop","_d","onThemeChange","hiddenInputRef","useRef","inputRef","formRef","_e","useState","currentImg","setCurrentImg","_f","newFile","setNewFile","EDIT_PROFILE__TITLE","BUTTON__SAVE","ButtonType","PRIMARY","current","value","reportValidity","e","preventDefault","EDIT_PROFILE__IMAGE_LABEL","display","URL","createObjectURL","target","files","click","BUTTON_1","EDIT_PROFILE__IMAGE_UPLOAD","EDIT_PROFILE__NICKNAME_LABEL","EDIT_PROFILE__NICKNAME_PLACEHOLDER","EDIT_PROFILE__USERID_LABEL","EDIT_PROFILE__THEME_LABEL","IconTypes","TOGGLE_ON","TOGGLE_OFF","mapStoreToProps","store","config","setCurrenttheme","ConnectedEditUserProfile","withSendbirdContext","AddChannel","sdk","disabled","channelListDispatcher","onBeforeCreateChannel","userFilledApplicationUserListQuery","userListQuery","showModal","setShowModal","step","setStep","setType","createApplicationUserListQuery","isBroadcastAvailable","isBroadcastChannelEnabled","isSupergroupAvailable","isSuperGroupChannelEnabled","CREATE","IconColors","CHAT","SUBTITLE_1","SUPERGROUP","BROADCAST","getErrorFirstCallback","MODAL__CREATE_CHANNEL__TITLE","BUTTON__CREATE","createDefaultUserListQuery","selectedUsers","createChannel","then","ChannelPreviewAction","onLeaveChannel","parentRef","stopPropagation","toggleDropdown","MORE","closeDropdown","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","ChannelsPlaceholder","Placeholder","createEventHandler","sdkChannelHandlerId","logger","ChannelHandler","onChannelChanged","info","channelActions","onChannelDeleted","onUserJoined","onUserBanned","currentUser","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","message","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","addChannelHandler","createChannelListQuery","userFilledChannelListQuery","channelListQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","order","limit","Object","keys","forEach","key","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","hasNext","next","response","error","swapParams","channelList","err","sorted","markAsDelivered","warning","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","subScriber","Map","set","topics","subscribe","msg","updatedChannel","ChannelList","props","stores","sdkStore","userStore","isOnline","userDispatcher","dispatchers","queries","renderChannelPreview","renderUserProfile","disableUserProfile","onProfileEditSuccess","enableEditProfile","userDefinedDisableUserProfile","userDefinedRenderProfile","applicationUserListQuery","sdkError","sdkIntialized","useReducer","channelListReducers","channelListInitialState","channelListStore","setUser","channelSource","showProfileEdit","setShowProfileEdit","setSdkChannelHandlerId","useEffect","uuidv4","removeChannelHandler","channelListActions","sortedChannels","console","warn","before","after","getChannel","groupChannel","newName","updateCurrentUserInfoWithProfileImage","updatedUser","userActions","fetchMore","clientHeight","scrollTop","scrollHeight","PlaceHolder","PlaceholderTypes","WRONG","idx","cb","leave","res","catch","onClick","LOADING","NO_CHANNELS","publish","channelNameContainsFilter","channelUrlsFilter","arrayOf","customTypesFilter","customTypeStartsWithFilter","hiddenChannelFilter","number","memberStateFilter","metadataOrderKeyFilter","nicknameContainsFilter","publicChannelFilter","superChannelFilter","unreadChannelFilter","userIdsExactFilter","userIdsIncludeFilter","userIdsIncludeFilterQueryType","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter"],"mappings":"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"}